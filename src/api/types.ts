export type RequestMethod = "GET" | "POST" | "PATCH" | "DELETE";
// Generated by https://quicktype.io

export interface IEnvelopeWithRecipients {
  email: string;
  name: string;
  envelopeIds: string[];
}

// Generated by https://quicktype.io

export interface IEnvelopeTemplate {
  templateId: string;
  uri: string;
  name: string;
  shared: string;
  passwordProtected: string;
  description: string;
  created: string;
  lastModified: string;
  lastUsed: string;
  owner: Owner;
  pageCount: string;
  folderId: string;
  folderName: string;
  folderIds: string[];
  autoMatch: string;
  autoMatchSpecifiedByUser: string;
  emailSubject: string;
  emailBlurb: string;
  signingLocation: string;
  authoritativeCopy: string;
  enforceSignerVisibility: string;
  enableWetSign: string;
  allowMarkup: string;
  allowReassign: string;
  disableResponsiveDocument: string;
  anySigner: null;
  envelopeLocation: null;
}

export interface Owner {
  userName: string;
  userId: string;
  email: string;
}

export interface IEnvelopeFromList {
  status: string;
  documentsUri: string;
  recipientsUri: string;
  attachmentsUri: string;
  envelopeUri: string;
  emailSubject: string;
  emailBlurb: string;
  envelopeId: string;
  signingLocation: string;
  customFieldsUri: string;
  notificationUri: string;
  allowMarkup: string;
  createdDateTime: string;
  lastModifiedDateTime: string;
  sentDateTime: string;
  statusChangedDateTime: string;
  documentsCombinedUri: string;
  certificateUri: string;
  templatesUri: string;
  expireEnabled: string;
  expireAfter: string;
  sender: Sender;
  purgeState: string;
  envelopeIdStamping: string;
  autoNavigation: string;
  isSignatureProviderEnvelope: string;
  anySigner: null;
  envelopeLocation: string;
}

export interface Sender {
  userName: string;
  userId: string;
  accountId: string;
  email: string;
  ipAddress: string;
}

export interface IEnvelope {
  status: string;
  documentsUri: string;
  recipientsUri: string;
  attachmentsUri: string;
  envelopeUri: string;
  emailSubject: string;
  emailBlurb: string;
  envelopeId: string;
  signingLocation: string;
  customFieldsUri: string;
  notificationUri: string;
  enableWetSign: string;
  allowMarkup: string;
  allowReassign: string;
  createdDateTime: string;
  lastModifiedDateTime: string;
  initialSentDateTime: string;
  sentDateTime: string;
  statusChangedDateTime: string;
  documentsCombinedUri: string;
  certificateUri: string;
  templatesUri: string;
  expireEnabled: string;
  expireDateTime: string;
  expireAfter: string;
  sender: Sender;
  purgeState: string;
  envelopeIdStamping: string;
  is21CFRPart11: string;
  signerCanSignOnMobile: string;
  autoNavigation: string;
  isSignatureProviderEnvelope: string;
  hasFormDataChanged: string;
  allowComments: string;
  hasComments: string;
  allowViewHistory: string;
  envelopeMetadata: EnvelopeMetadata;
  anySigner: null;
  envelopeLocation: string;
  isDynamicEnvelope: string;
  burnDefaultTabData: string;
}

export interface EnvelopeMetadata {
  allowAdvancedCorrect: string;
  enableSignWithNotary: string;
  allowCorrect: string;
}

export interface Sender {
  userName: string;
  userId: string;
  accountId: string;
  email: string;
  ipAddress: string;
}
